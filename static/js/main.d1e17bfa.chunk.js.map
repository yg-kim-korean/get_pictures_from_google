{"version":3,"sources":["components/Footer.js","module/types.js","lib/asyncUtils.js","module/searchword.js","api/setsearchword.js","module/setnowpage.js","api/setnowpage.js","components/SearchFieldForHome.js","containers/HomePage.js","containers/NotFound.js","api/searchresult.js","module/imagelists.js","module/searchlists.js","components/SearchFieldForSearch.js","components/MiddleBarForSearch.js","components/SearchResult.js","containers/SearchPage.js","components/ImageLists.js","containers/ImageSearchPage.js","components/ImageListsFromAxios.js","containers/ImageSearchPageFromAxios.js","App.js","module/index.js","reportWebVitals.js","index.js"],"names":["Footer","className","GET_SEARCH_LISTS","GET_SEARCH_LISTS_SUCCESS","GET_SEARCH_LISTS_ERROR","CLEAR_SEARCH_LIST","GET_IMAGE_LISTS","GET_IMAGE_LISTS_SUCCESS","GET_IMAGE_LISTS_ERROR","CLEAR_IMAGE_LIST","CLEAR_IMAGE_LIST2","SET_SEARCH_WORD","SET_NOW_PAGE","createPromiseThunkBySearch","type","promiseCreator","SUCCESS","ERROR","param","dispatch","a","payload","error","reducerUtils","initialData","loading","data","prevState","handleAsyncActions","key","keepData","state","action","handleSetSearchWord","word","meta","searchword","handleSetNowPage","nowpage","initialState","settingSearchWord","console","log","setSearchWord","settingNowPage","setNowPage","SearchFieldForHome","useSelector","useState","inputWord","setInputWord","inputRef","useRef","history","useHistory","useDispatch","useEffect","current","focus","push","to","ref","onKeyDown","e","target","value","HomePage","Helmet","name","content","NotFound","search_word","x","axios","get","html","cheerio","load","$","each","i","index","img","find","attr","title","link","text","params","query","display","headers","items","getImageLists","clearImageList","imagelists","getSearchList","clearSearchList","clearImageListFromAxios","searchlists","SearchFieldForSearch","width","height","onClick","defaultValue","placeholder","MiddleBarForSearch","nowPage","setnowpage","setStyle","color","fontWeight","borderBottom","style","SearchResult","map","item","href","src","alt","SearchPage","ImageLists","selectedSrc","setSelectedSrc","selectedTitle","setSelectedTitle","visible","setVisible","select","effect","onClickAway","ImageSearchPage","ImageSearchPageFromAxios","ImageListsFromAxios","App","basename","process","exact","path","component","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"6OAUeA,MARf,WACI,OACI,wBAAQC,UAAU,SAAlB,SACE,qBAAKA,UAAU,cAAf,2B,+BCJGC,EAAmB,mBACnBC,EAA2B,2BAC3BC,EAAyB,yBACzBC,EAAmB,oBAEnBC,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAwB,wBACxBC,EAAkB,mBAElBC,EAAmB,oBAEnBC,EAAkB,kBAClBC,EAAe,e,2CCUfC,EAA6B,SAACC,EAAMC,GAAiD,IACvFC,EADsF,UAChEF,EADgE,YAC7EG,EAD6E,UAC7CH,EAD6C,UAM7F,OAAO,SAAAI,GAAK,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAGZD,EAAS,CAACL,OAAKI,UAHH,kBAMcH,EAAeG,GAN7B,OAMFG,EANE,OAORF,EAAS,CAAEL,KAAKE,EAASK,YAPjB,gDAURF,EAAS,CAAEL,KAAMG,EAAOI,QAAQ,EAAD,GAAQC,OAAM,IAVrC,yDAAJ,wDAgEHC,EACA,eAAEC,EAAF,uDAAgB,KAAhB,MAAyB,CAC9BC,SAAS,EACTC,KAAMF,EACNF,MAAO,OAJFC,EAQA,eAACI,EAAD,uDAAa,KAAb,MAAuB,CAC5BF,SAAS,EACTC,KAAMC,EACNL,MAAO,OAXFC,EAcA,SAAAF,GAAO,MAAK,CACjBI,SAAS,EACTC,KAAML,EACNC,MAAO,OAjBFC,EAoBF,SAAAD,GAAK,MAAK,CACbG,SAAS,EACTC,KAAM,KACNJ,MAAOA,IAKFM,EAAqB,SAACd,EAAKe,GAAyB,IAArBC,EAAoB,wDACrDd,EADqD,UAC/BF,EAD+B,YAC5CG,EAD4C,UACbH,EADa,UAE5D,OAAO,SAACiB,EAAMC,GACV,OAAOA,EAAOlB,MACV,KAAKA,EACD,OAAO,2BACAiB,GADP,kBAEKF,EAAMN,EAAqBO,EAAWC,EAAMF,GAAKH,KAAO,QAEjE,KAAKV,EACD,OAAO,2BACAe,GADP,kBAEKF,EAAON,EAAqBS,EAAOX,WAE5C,KAAKJ,EACD,OAAO,2BACAc,GADP,kBAEKF,EAAON,EAAmBS,EAAOX,WAE1C,QACI,OAAOU,KA0CVE,EAAqB,SAAEnB,EAAMe,GACtC,OAAO,SAACE,EAAMC,GACV,IAAME,EAAOF,EAAOG,KACpB,OAAQH,EAAOlB,MACf,KAAKH,EACD,OAAO,2BACAoB,GADP,IAEIK,WAAaF,IAErB,QACI,OAAOH,KAONM,EAAkB,SAAEvB,EAAMe,GACnC,OAAO,SAACE,EAAMC,GACV,IAAME,EAAOF,EAAOG,KACpB,OAAQH,EAAOlB,MACf,KAAKF,EACD,OAAO,2BACAmB,GADP,IAEIO,QAAUJ,IAElB,QACI,OAAOH,KC/MbQ,EAAa,CACfH,WAAW,IAGFI,EDoCgB,SAAC1B,GAC1B,OAAO,SAAAI,GAAK,8CAAI,WAAMC,GAAN,SAAAC,EAAA,sDACZD,EAAS,CAACL,OAAKqB,KAAKjB,IACpB,IAEIC,EAAS,CAACL,OAAKqB,KADOjB,IAG1B,MAAMI,GACFmB,QAAQC,IAAI,iDAPJ,2CAAJ,uDCrCiBC,CAAchC,GCRhC,SAAuBuB,GAClC,OAAOA,KCGX,IAAMK,EAAa,CACfD,QAAQ,IAGCM,EHgDa,SAAC9B,GACvB,OAAO,SAAAI,GAAK,8CAAI,WAAMC,GAAN,SAAAC,EAAA,sDACZD,EAAS,CAACL,OAAKqB,KAAKjB,IACpB,IAEIC,EAAS,CAACL,OAAKqB,KADCjB,IAGpB,MAAMI,GACFmB,QAAQC,IAAI,8DAPJ,2CAAJ,uDGjDcG,CAAWjC,GCR1B,SAAoBsB,GAC/B,OAAOA,KCoDIY,MA7Cf,WACI,IAAMV,EAAaW,aAAY,SAAAhB,GAAK,OAAIA,EAAMK,WAAWA,cAD/B,EAEQY,mBAAS,IAFjB,mBAEnBC,EAFmB,KAERC,EAFQ,KAGpBC,EAAWC,mBACXC,EAAUC,cACVnC,EAAWoC,cAkBjB,OAjBAC,qBAAU,WACRL,EAASM,QAAQC,QACbT,GAEF9B,EAASqB,EAAkBS,IAEzBb,IACFjB,EAASyB,EAAe,SACxBS,EAAQM,KAAK,kBAEd,CAACxC,EAAS8B,EAAUb,EAAWiB,IAQhC,sBAAKpD,UAAU,qBAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,cAAC,IAAD,CAAUA,UAAU,mCACpB,cAAC,IAAD,CAAMA,UAAU,+BAA+B2D,GAAG,IAAlD,oBAEF,qBAAK3D,UAAU,2BAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,qBAAMA,UAAU,sCAAhB,SAAsD,cAAC,IAAD,CAAea,KAAK,aAC1E,uBAAOA,KAAK,OAAOb,UAAU,uCAAuC4D,IAAKV,EAAUW,UAd3E,SAACC,GACF,UAATA,EAAElC,KACJqB,EAAaa,EAAEC,OAAOC,eAetB,qBAAKhE,UAAU,2BAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,cAAC,IAAD,CAAM2D,GAAG,cAAc3D,UAAU,sCAAjC,SAAuE,uBAAOa,KAAK,SAASb,UAAU,uCAAuCgE,MAAM,gBACnJ,uBAAOnD,KAAK,SAASb,UAAU,uCAAuCgE,MAAM,+BCrBzEC,MApBf,WACI,OACI,uBAAMjE,UAAU,OAAhB,UACI,eAACkE,EAAA,EAAD,WACI,yCACA,sBACIC,KAAK,cACLC,QAAQ,2BAGhB,yBAASpE,UAAU,eAAnB,SACI,cAAC,EAAD,MAEJ,kCACI,cAAC,EAAD,UCTDqE,EARE,kBAET,sBAAKrE,UAAU,WAAf,UACI,oBAAIA,UAAU,oBAAd,2BACA,mBAAGA,UAAU,sBAAb,wE,+ECoBL,WAA6BsE,GAA7B,mBAAAnD,EAAA,sDACGM,EAAO,GADV,IAAAN,EAAA,iBAEMoD,GAFN,iBAAApD,EAAA,sEAIoBqD,IAAMC,IAAN,sGAAyGH,IAJ7H,cAIOI,EAJP,gBAKiBC,IAAQC,KAAKF,EAAKjD,MALnC,QAKOoD,EALP,QAMG,2BAA2BC,MAAK,SAACC,EAAEjB,GACjCrC,EAAKiC,KAAK,CACFsB,MAAQD,EAAER,EACVU,IAAMJ,EAAEf,GAAGoB,KAAK,aAAaC,KAAK,OAClCC,MAAQP,EAAEf,GAAGoB,KAAK,cAAcC,KAAK,SACrCE,KAAOR,EAAEf,GAAGoB,KAAK,cAAcC,KAAK,QACpCG,KAAMT,EAAEf,GAAGoB,KAAK,gCAAgCI,YAZ7D,0CAEMf,EAAI,EAFV,YAEaA,EAAI,IAFjB,yCAEMA,GAFN,eAEqBA,GAAG,GAFxB,+CAkBI9C,GAlBJ,4C,kEAqBA,WAA8B6C,GAA9B,iBAAAnD,EAAA,4DACW,uBACG,aAFd,SAMWqD,IAAMC,IAAN,qFAA+F,CACjFc,OAAO,CACPC,MAAMlB,EACNmB,QAAQ,IAERC,QAAQ,CACR,oBAXd,uBAYc,wBAXX,gBAFd,uBAKUC,EALV,EAKIlE,KAAMkE,MALV,kBAgBIA,GAhBJ,4C,sBCtCA,IAAMC,GAAgBhF,EAA2BP,GDsCjD,SAAP,qCCrCawF,GAAiB,iBAAO,CAAEhF,KAAML,IACvC8B,GAAa,CACfwD,WAAYxE,KCCT,IAAMyE,GAAgBnF,EAA2BX,GFajD,SAAP,qCEZa+F,GAAkB,iBAAO,CAAEnF,KAAMT,IACjC6F,GAA0B,iBAAO,CAAEpF,KAAMJ,IAChD6B,GAAa,CACf4D,YAAc5E,KCsCH6E,OA5Cf,WACE,IAAMhE,EAAaW,aAAY,SAAAhB,GAAK,OAAIA,EAAMK,WAAWA,cAD3B,EAEIY,mBAAS,IAFb,mBAEvBC,EAFuB,KAEZC,EAFY,KAGxBG,EAAUC,cACVnC,EAAWoC,cAuBd,OAtBHC,qBAAU,WACJP,IAEA9B,EAASqB,EAAkBS,IAC3BC,EAAa,OAEhB,CAAC/B,EAAS8B,EAAUb,IAiBnB,sBAAKnC,UAAU,uBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,cAAC,IAAD,CAAUoG,MAAM,IAAIC,OAAO,IAAIrG,UAAU,qCACzC,qBAAKA,UAAU,iCAAiCsG,QAZlC,WAClBpF,EAAS2E,MACT3E,EAAS8E,IACT9E,EAASqB,EAAkB,KAC3BrB,EAASyB,EAAe,KACxBS,EAAQM,KAAK,MAOT,oBAEF,sBAAK1D,UAAU,6BAAf,UACE,uBAAOa,KAAK,OAAOb,UAAU,oCAAoCuG,aAAcpE,GAA0B,KAAMqE,YAAY,YAAY3C,UArB7H,SAACC,GACF,UAATA,EAAElC,KACJqB,EAAaa,EAAEC,OAAOC,UAoBpB,cAAC,IAAD,CAAenD,KAAK,SAASb,UAAU,wCAEzC,qBAAKA,UAAU,mCCCRyG,OA1Cf,WACI,IAAMC,EAAU5D,aAAY,SAAAhB,GAAK,OAAIA,EAAM6E,WAAWtE,WAChDe,EAAUC,cACVnC,EAAWoC,cAmBjBC,qBAAU,cACP,CAACmD,IACJ,IAAME,EAAS,CAACC,MAAM,UAAWC,WAAW,SAASC,aAAa,qBAClE,OACI,qBAAK/G,UAAU,qBAAf,SACI,qBAAIA,UAAU,yBAAd,UACI,oBAAIA,UAAU,6BAAd,SACI,qBAAKA,UAAU,kCAAkCgH,MAAiB,SAAVN,EAAoBE,EAAU,KAAMN,QAzBxF,WAChBpF,EAAS2E,MACT3E,EAAS+E,MACT/E,EAASyB,EAAe,SACxBS,EAAQM,KAAK,gBAqBD,oBAEJ,oBAAI1D,UAAU,6BAAd,SACI,qBAAKA,UAAU,kCAAkCgH,MAAiB,SAAVN,EAAmBE,EAAU,KAAMN,QAtB7E,WAC1BpF,EAAS8E,MACT9E,EAAS+E,MACT/E,EAASyB,EAAe,SACxBS,EAAQM,KAAK,uBAkBD,gCAEJ,oBAAI1D,UAAU,6BAAd,SACI,qBAAKA,UAAU,kCAAkCgH,MAAiB,SAAVN,EAAmBE,EAAW,KAAMN,QAnB9E,WAC1BpF,EAAS8E,MACT9E,EAAS2E,MACT3E,EAASyB,EAAe,SACxBS,EAAQM,KAAK,oBAeD,mCCHLuD,OAnCf,WAAyB,IAAD,EACWnE,aAAY,SAAAhB,GAAK,OAAEA,EAAMoE,YAAYA,eAA7DzE,EADa,EACbA,KAAMD,EADO,EACPA,QAASH,EADF,EACEA,MAChBH,EAAWoC,cACXnB,EAAaW,aAAY,SAAAhB,GAAK,OAAIA,EAAMK,WAAWA,cASzD,OARAoB,qBAAU,WACHpB,GACCjB,EAAS6E,GAAc5D,MAE7B,CAACjB,EAASiB,IAIRX,IAAUC,EAAa,qBAAKzB,UAAU,UAAf,oCACvBqB,EAAc,qBAAKrB,UAAU,UAAf,uCACbyB,EAED,qBAAKzB,UAAU,eAAf,SACI,oBAAIA,UAAU,mBAAd,SAEQyB,EAAKyF,KAAI,SAAAC,GAAI,OACT,oBAAInH,UAAU,uBAAd,SACI,oBAAGoH,KAAMD,EAAK9B,KAAMrF,UAAU,0BAA9B,UACI,qBAAKA,UAAU,+BAAf,SAA+CmH,EAAK/B,QACpD,qBAAKiC,IAAKF,EAAKlC,IAAKqC,IAAI,GAAGtH,UAAU,iCACrC,qBAAKA,UAAU,gCAAf,SAAgDmH,EAAK7B,WAJnB6B,EAAKnC,cANhD,qBAAKhF,UAAU,UAAf,sECcRuH,OA1Bf,WACI,OACI,uBAAMvH,UAAU,aAAhB,UACI,eAACkE,EAAA,EAAD,WACI,gDACA,sBACIC,KAAK,cACLC,QAAQ,oDAGhB,yBAASpE,UAAU,kBAAnB,SACI,cAAC,GAAD,MAEJ,kCACI,cAAC,GAAD,MAEJ,yBAASA,UAAU,oBAAnB,SACI,cAAC,GAAD,MAEJ,kCACI,cAAC,EAAD,U,oBCiCDwH,OArDf,WAAuB,IAAD,EACa1E,aAAY,SAAAhB,GAAK,OAAEA,EAAMgE,WAAWA,cAA5DrE,EADW,EACXA,KAAMD,EADK,EACLA,QAASH,EADJ,EACIA,MAChBc,EAAaW,aAAY,SAAAhB,GAAK,OAAIA,EAAMK,WAAWA,cAFvC,EAGmBY,mBAAS,IAH5B,mBAGX0E,EAHW,KAGCC,EAHD,OAIuB3E,mBAAS,IAJhC,mBAIX4E,EAJW,KAIGC,EAJH,OAKY7E,oBAAS,GALrB,mBAKX8E,EALW,KAKHC,EALG,KAMZ5G,EAAWoC,cAejB,OAdAC,qBAAU,WACFpB,GACJjB,EAAS0E,GAAczD,MAExB,CAACjB,EAASiB,IAUTX,IAAUC,EAAa,qBAAKzB,UAAU,UAAf,oCACvBqB,EAAc,qBAAKrB,UAAU,UAAf,uCACbyB,EAGD,sBAAKzB,UAAU,aAAf,UACSyB,EAAKyF,KAAI,SAACC,EAAKnC,GAAN,OACNA,EACA,sBAAKhF,UAAU,kBAA8BsG,QAAS,WAjBpD,IAACyB,EACfL,GADeK,EAiBoEZ,GAhB7D9B,MACtBuC,EAAiBG,EAAO3C,OACzB0C,GAAW,IAcE,UACI,qBAAK9H,UAAU,uBAAuBqH,IAAKF,EAAK9B,KAAMiC,IAAKH,EAAK/B,QAChE,qBAAKpF,UAAU,uBAAuBqH,IAAKF,EAAK9B,SAFdL,GAInC,QAEP,cAAC,KAAD,CAAOhF,UAAU,oBACboG,MAAM,MACNC,OAAO,MACPwB,QAASA,EACTG,OAAO,WACPC,YAAa,WArBzBH,GAAW,IAgBH,SAMI,sBAAK9H,UAAU,yBAAf,UACI,qBAAKA,UAAU,8BAA8BqH,IAAKI,EAAaH,IAAKK,IACpE,qBAAK3H,UAAU,8BAAf,SAA8C2H,YApB/C,qBAAK3H,UAAU,UAAf,sECGRkI,OA1Bf,WACI,OACI,uBAAMlI,UAAU,OAAhB,UACI,eAACkE,EAAA,EAAD,WACI,sDACA,sBACIC,KAAK,cACLC,QAAQ,6CAGhB,yBAASpE,UAAU,kBAAnB,SACI,cAAC,GAAD,MAEJ,kCACI,cAAC,GAAD,MAEJ,yBAASA,UAAU,oBAAnB,SACI,cAAC,GAAD,MAEJ,kCACI,cAAC,EAAD,UC+BDwH,OApDf,WAAuB,IAAD,EAEa1E,aAAY,SAAAhB,GAAK,OAAEA,EAAMoE,YAAYA,eAA7DzE,EAFW,EAEXA,KAAMD,EAFK,EAELA,QAASH,EAFJ,EAEIA,MAChBc,EAAaW,aAAY,SAAAhB,GAAK,OAAIA,EAAMK,WAAWA,cAHvC,EAImBY,mBAAS,IAJ5B,mBAIX0E,EAJW,KAICC,EAJD,OAKuB3E,mBAAS,IALhC,mBAKX4E,EALW,KAKGC,EALH,OAMY7E,oBAAS,GANrB,mBAMX8E,EANW,KAMHC,EANG,KAOZ5G,EAAWoC,cAgBjB,OAfAC,qBAAU,WACFpB,GAEJjB,EAAS6E,GAAc5D,MAExB,CAACjB,EAASiB,IAUTX,IAAUC,EAAa,qBAAKzB,UAAU,UAAf,oCACvBqB,EAAc,qBAAKrB,UAAU,UAAf,uCACbyB,EAGD,sBAAKzB,UAAU,sBAAf,UACSyB,EAAKyF,KAAI,SAAAC,GAAI,OAEV,sBAAKnH,UAAU,2BAA4CsG,QAAS,WAjBlE,IAACyB,EACfL,GADeK,EAiBkFZ,GAhB3ElC,KACtB2C,EAAiBG,EAAO3C,OACzB0C,GAAW,IAcE,UACI,qBAAK9H,UAAU,gCAAgCqH,IAAKF,EAAKlC,IAAKqC,IAAKH,EAAK/B,QACxE,qBAAKpF,UAAU,oCAF4BmH,EAAKnC,UAMxD,cAAC,KAAD,CAAOhF,UAAU,6BACjBoG,MAAM,MAAMC,OAAO,MACnBwB,QAASA,EAASG,OAAO,WAAWC,YAAa,WAlBzDH,GAAW,IAgBH,SAGI,sBAAK9H,UAAU,kCAAf,UACI,qBAAKA,UAAU,uCAAuCqH,IAAKI,EAAaH,IAAKK,IAC7E,qBAAK3H,UAAU,uCAAf,SAAuD2H,YAjBxD,qBAAK3H,UAAU,UAAf,sECERmI,OA1Bf,WACI,OACI,uBAAMnI,UAAU,OAAhB,UACI,eAACkE,EAAA,EAAD,WACI,sDACA,sBACIC,KAAK,cACLC,QAAQ,6CAGhB,yBAASpE,UAAU,kBAAnB,SACI,cAAC,GAAD,MAEJ,kCACI,cAAC,GAAD,MAEJ,yBAASA,UAAU,oBAAnB,SACI,cAACoI,GAAD,MAEJ,kCACI,cAAC,EAAD,U,OCHDC,OAdf,WAEE,OACE,cAAC,IAAD,CAAQC,SAAUC,4BAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzE,IACjC,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,qBAAqBC,UAAWR,KAClD,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,cAAcC,UAAWnB,KAC3C,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,kBAAkBC,UAAWP,KAC/C,cAAC,IAAD,CAAOO,UAAWrE,UCVXsE,GAFMC,0BAAgB,CAAC1C,YVavB,WAA8C,IAA/BpE,EAA8B,uDAAtBQ,GAAcP,EAAQ,uCACxD,OAAOA,EAAOlB,MACV,KAAKZ,EACL,KAAKE,EACL,KAAKD,EACD,OAAOyB,EAAmB1B,EAAiB,eAAc,EAAlD0B,CAAwDG,EAAMC,GAEzE,KAAK3B,EAKL,KAAKK,EACD,OAAO,2BACAqB,GADP,IAEIoE,YAAY5E,MAGpB,QACI,OAAOQ,IUhC+BK,WnBInC,WAAmD,IAA/BL,EAA8B,uDAAtBQ,EAAcP,EAAQ,uCAC7D,OAAOA,EAAOlB,MACV,KAAKH,EACD,OAAOsB,EAAoBtB,EAAgB,cAAa,EAAjDsB,CAAuDF,EAAMC,GACxE,QACI,OAAOD,ImBT0CgE,WXQ9C,WAAkD,IAA9BhE,EAA6B,uDAArBQ,GAAcP,EAAO,uCAC5D,OAAOA,EAAOlB,MACV,KAAKR,EACL,KAAKE,EACL,KAAKD,EACD,OAAOqB,EAAmBtB,EAAiB,cAAc,EAAlDsB,CAAwDG,EAAMC,GACzE,KAAKvB,EACG,OAAO,2BACAsB,GADP,IAEIgE,WAAWxE,MAEvB,QACI,OAAOQ,IWpBqD6E,WjBIzD,WAAgD,IAA/B7E,EAA8B,uDAAtBQ,EAAcP,EAAQ,uCAC1D,OAAOA,EAAOlB,MACV,KAAKF,EACD,OAAOyB,EAAiBzB,EAAa,WAAU,EAAxCyB,CAA8CN,EAAMC,GAC/D,QACI,OAAOD,MkBHJ+G,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,UCERQ,GAAQC,sBACZZ,GACAa,8BAAoBC,0BAAgBC,QAEtCC,IAASC,OAEP,cAAC,IAAD,CAAUN,MAASA,GAAnB,SACE,cAAC,GAAD,MAEFO,SAASC,eAAe,SAM1BjB,O","file":"static/js/main.d1e17bfa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n          <div className=\"footer__div\">Contact Us</div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","\r\nexport const GET_SEARCH_LISTS = 'GET_SEARCH_LISTS';\r\nexport const GET_SEARCH_LISTS_SUCCESS = 'GET_SEARCH_LISTS_SUCCESS';\r\nexport const GET_SEARCH_LISTS_ERROR = 'GET_SEARCH_LISTS_ERROR';\r\nexport const CLEAR_SEARCH_LIST= 'CLEAR_SEARCH_LIST';\r\n\r\nexport const GET_IMAGE_LISTS = 'GET_IMAGE_LISTS';\r\nexport const GET_IMAGE_LISTS_SUCCESS = 'GET_IMAGE_LISTS_SUCCESS';\r\nexport const GET_IMAGE_LISTS_ERROR = 'GET_IMAGE_LISTS_ERROR';\r\nexport const CLEAR_IMAGE_LIST= 'CLEAR_IMAGE_LIST';\r\n\r\nexport const CLEAR_IMAGE_LIST2= 'CLEAR_IMAGE_LIST2';\r\n\r\nexport const SET_SEARCH_WORD = 'SET_SEARCH_WORD';\r\nexport const SET_NOW_PAGE = 'SET_NOW_PAGE';","import { SET_NOW_PAGE, SET_SEARCH_WORD } from \"../module/types\";\r\n\r\n//Promise 기반 thunk를 만들어주는 함수\r\nexport const createPromiseThunk = (type, promiseCreator) => {\r\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`]\r\n\r\n    //이 함수는 promiseCreator가 단 하나의 파라미터만 받는다는 전제하에 작성\r\n    // 만약 여러 종류의 파라미터를 전달해야하는 상황에서는 객체 타입의 파라미터를 받아오도록 하면됨\r\n    //예: writeComment({postID: 1, text:'댓글내용'});\r\n    return param => async dispatch =>{\r\n        //요청시작\r\n        dispatch({type,param});\r\n        try{\r\n            //결과물의 이름을 payload로 통일\r\n            const payload = await promiseCreator(param);\r\n            dispatch({ type:SUCCESS, payload})\r\n        }\r\n        catch(error) {\r\n            dispatch({ tYpe: ERROR, payload:error, error:true})\r\n        }\r\n    }\r\n}\r\n//Promise 기반 thunk를 만들어주는 함수\r\nconst defaultSelector = param => param;\r\nexport const createPromiseThunkBySearch = (type, promiseCreator,SearchWord = defaultSelector) => {\r\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`]\r\n\r\n    //이 함수는 promiseCreator가 단 하나의 파라미터만 받는다는 전제하에 작성\r\n    // 만약 여러 종류의 파라미터를 전달해야하는 상황에서는 객체 타입의 파라미터를 받아오도록 하면됨\r\n    //예: writeComment({postID: 1, text:'댓글내용'});\r\n    return param => async dispatch =>{\r\n        \r\n        //요청시작\r\n        dispatch({type,param});\r\n        try{\r\n            //결과물의 이름을 payload로 통일\r\n            const payload = await promiseCreator(param);\r\n            dispatch({ type:SUCCESS, payload})\r\n        }\r\n        catch(error) {\r\n            dispatch({ type: ERROR, payload:error, error:true})\r\n        }\r\n    }\r\n}\r\nexport const setSearchWord = (type, searchword = defaultSelector) =>{\r\n    return param => async dispatch =>{\r\n        dispatch({type,meta:param});\r\n        try {\r\n            const getSearchWord = param;\r\n            dispatch({type,meta:getSearchWord})\r\n        }\r\n        catch(error){\r\n            console.log('검색어 설정 에러!');\r\n        }\r\n    }\r\n}\r\nexport const setNowPage = (type, nowpage = defaultSelector) =>{\r\n    return param => async dispatch =>{\r\n        dispatch({type,meta:param});\r\n        try {\r\n            const nowPage = param;\r\n            dispatch({type,meta:nowPage})\r\n        }\r\n        catch(error){\r\n            console.log('지금 페이지 설정 에러!');\r\n        }\r\n    }\r\n}\r\n\r\nexport const createPromiseThunkById = (\r\n    type,\r\n    promiseCreator,\r\n    //파라미터에서 id를 어떻게 선택할지 정의하는 함수\r\n    // 기본값으로는 파라미터를 그대로 id로 사용\r\n    // 하지만 만약 파라미터가 {id: 1, details: true} 형태라면\r\n    // idSelector를 param=> param.id 이런식으로 설정 가능.\r\n    IdSelector = defaultSelector\r\n    )=> {\r\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n    return param=> async dispatch =>{\r\n        const id = IdSelector(param);\r\n        dispatch({type,meta:id});\r\n        try{\r\n            const payload = await promiseCreator(param);\r\n            dispatch({type:SUCCESS, payload, meta: id})\r\n        }\r\n        catch (e){\r\n            dispatch({type:ERROR, error:true, payload:e, meta:id});\r\n        }\r\n    }\r\n}\r\n\r\n//리듀서에서 사용할 수 있는 여러 유틸함수 들 입니다.\r\nexport const reducerUtils = {\r\n    initial: ( initialData = null) =>({\r\n        loading: false,\r\n        data: initialData,\r\n        error: null\r\n    }),\r\n     // 로딩중 상태. prevState의 경우엔 기본값은 null 이지만\r\n    // 따로 값을 지정하면 null 로 바꾸지 않고 다른 값을 유지시킬 수 있습니다.\r\n    loading: (prevState = null) => ({\r\n        loading: true,\r\n        data: prevState,\r\n        error: null\r\n    }),\r\n    // 성공 상태\r\n    success: payload => ({\r\n        loading: false,\r\n        data: payload,\r\n        error: null\r\n    }),\r\n    // 실패 상태\r\n    error: error => ({\r\n        loading: false,\r\n        data: null,\r\n        error: error\r\n    })\r\n}\r\n//비동기 관련 액션들을 처리하는 리듀서 생성\r\n// type은 액션의 타입, key 는 상태의 key (예:lists, list) 입니다\r\nexport const handleAsyncActions = (type,key,keepData = false) =>{\r\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`,`${type}_ERROR`];\r\n    return (state,action) =>{\r\n        switch(action.type){\r\n            case type:\r\n                return {\r\n                    ...state,\r\n                    [key]: reducerUtils.loading(keepData ? state[key].data : null)\r\n                }\r\n            case SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    [key] : reducerUtils.success(action.payload)\r\n                }\r\n            case ERROR:\r\n                return {\r\n                    ...state,\r\n                    [key] : reducerUtils.error(action.payload)\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n}\r\n//비동기 ID별로 액션 처리하는 리듀서 생성\r\nexport const handleAsyncActionsById = (type,key,keepData = false) =>{\r\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n    return (state,action) =>{\r\n        const id = action.meta;\r\n        switch(action.type){\r\n            case type:\r\n                return{\r\n                    ...state,\r\n                    [key] : {\r\n                        ...state[key],\r\n                        [id] : reducerUtils.loading(\r\n                            keepData ? state[key][id] && state[key][id].data : null\r\n                        )\r\n                    }\r\n                };\r\n            case SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    [key]:{\r\n                        ...state[key],\r\n                        [id]: reducerUtils.success(action.payload)\r\n                    }\r\n                };\r\n            case ERROR:\r\n                return {\r\n                    ...state,\r\n                    [key]:{\r\n                        ...state[key],\r\n                        [id]: reducerUtils.error(action.payload)\r\n                    }\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleSetSearchWord= ( type, key,keepData=false) =>{ \r\n    return (state,action)=>{\r\n        const word = action.meta;\r\n        switch (action.type){\r\n        case SET_SEARCH_WORD:\r\n            return {\r\n                ...state,\r\n                searchword : word\r\n            }\r\n        default:\r\n            return state\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n}\r\nexport const handleSetNowPage= ( type, key,keepData=false) =>{ \r\n    return (state,action)=>{\r\n        const word = action.meta;\r\n        switch (action.type){\r\n        case SET_NOW_PAGE:\r\n            return {\r\n                ...state,\r\n                nowpage : word\r\n            }\r\n        default:\r\n            return state\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n}","import {SET_SEARCH_WORD} from './types';\r\n\r\nimport setsearchword from '../api/setsearchword'\r\nimport { handleSetSearchWord,setSearchWord } from '../lib/asyncUtils';\r\nconst initialState={\r\n    searchword:''\r\n}\r\n\r\nexport const settingSearchWord = setSearchWord(SET_SEARCH_WORD,setsearchword);\r\n\r\nexport default function searchword(state = initialState, action) {\r\n    switch(action.type){\r\n        case SET_SEARCH_WORD:\r\n            return handleSetSearchWord(SET_SEARCH_WORD,'searchword',true)(state,action);\r\n        default:\r\n            return state;\r\n    }       \r\n}\r\n","export default function setsearchword(word) {\r\n    return word\r\n}\r\n","import {SET_NOW_PAGE} from './types';\r\n\r\nimport setnowpage from '../api/setnowpage'\r\nimport { handleSetNowPage,setNowPage } from '../lib/asyncUtils';\r\nconst initialState={\r\n    nowpage:''\r\n}\r\n\r\nexport const settingNowPage = setNowPage(SET_NOW_PAGE,setnowpage);\r\n\r\nexport default function nowpage(state = initialState, action) {\r\n    switch(action.type){\r\n        case SET_NOW_PAGE:\r\n            return handleSetNowPage(SET_NOW_PAGE,'nowpage',true)(state,action);\r\n        default:\r\n            return state;\r\n    }       \r\n}\r\n","export default function setnowpage(word) {\r\n    return word\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport {FaSearchengin} from 'react-icons/fa'\r\nimport {VscQuote} from 'react-icons/vsc'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory} from 'react-router-dom';\r\nimport { settingSearchWord } from '../module/searchword';\r\nimport { settingNowPage } from '../module/setnowpage';\r\n\r\nfunction SearchFieldForHome() {\r\n    const searchword = useSelector(state => state.searchword.searchword);\r\n    const [inputWord, setInputWord] = useState('');\r\n    const inputRef = useRef();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      inputRef.current.focus();\r\n      if (inputWord)\r\n      {\r\n        dispatch(settingSearchWord(inputWord))\r\n      }\r\n      if (searchword){\r\n        dispatch(settingNowPage('news'))\r\n        history.push('/searchnews')\r\n      }\r\n    }, [dispatch,inputWord,searchword,history])\r\n    \r\n    const onPress = (e) =>{\r\n      if (e.key ==='Enter'){\r\n        setInputWord(e.target.value);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"SearchFieldForHome\">\r\n        <div className=\"SearchFieldForHome__div1\">\r\n          <VscQuote className=\"SearchFieldForHome__div1__icon\" />\r\n          <Link className=\"SearchFieldForHome__div1__YG\" to=\"/\" >Y G</Link>\r\n        </div>\r\n        <div className=\"SearchFieldForHome__div2\">\r\n          <div className=\"SearchFieldForHome__div2__div\">\r\n            <div  className=\"SearchFieldForHome__div2__div__icon\"><FaSearchengin type=\"button\" /></div>\r\n            <input type=\"text\" className=\"SearchFieldForHome__div2__div__input\" ref={inputRef} onKeyDown={onPress} />\r\n          </div>\r\n        </div >\r\n        <div className=\"SearchFieldForHome__div3\">\r\n          <div className=\"SearchFieldForHome__div3__div\">\r\n            <Link to=\"/searchnews\" className=\"SearchFieldForHome__div3__div__link\"><input type=\"submit\" className=\"SearchFieldForHome__div3__div__input\" value=\"YG Search\" /></Link>\r\n            <input type=\"submit\" className=\"SearchFieldForHome__div3__div__input\" value=\"I'm Feeling Lucky\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SearchFieldForHome\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport Footer from '../components/Footer'\r\nimport SearchFieldForHome from '../components/SearchFieldForHome'\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <main className='home'>\r\n            <Helmet>\r\n                <title>Home</title>\r\n                <meta\r\n                    name='description'\r\n                    content='검색 홈'\r\n                />\r\n            </Helmet>\r\n            <section className='home__search'>\r\n                <SearchFieldForHome />\r\n            </section>\r\n            <section>\r\n                <Footer />\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\n\r\nconst NotFound = () => (\r\n    \r\n        <div className='notfound'>\r\n            <h1 className=\"notfound__heading\">404 Not Found</h1>\r\n            <p className=\"notfound__paragraph\">The link you requested does not exists on our website.</p>\r\n        </div>\r\n);\r\n\r\nexport default NotFound;","import axios from 'axios'\r\nimport cheerio from 'cheerio'\r\n\r\n// export async function get_data_imagelist(search_word) {\r\n//     const data = []\r\n//     // for (let x = 1; x < 20; x+=10){\r\n//         //https://cors-anywhere.herokuapp.com/ 추가로 cors 에러 삭제\r\n//         // const html = await axios.get(`https://cors-anywhere.herokuapp.com/https://search.naver.com/search.naver?&where=news&query=${search_word}&sm=tab_pge&sort=0&photo=0&field=0&reporter_article=&pd=0&ds=&de=&docid=&nso=so:r,p:all,a:all&mynews=0&cluster_rank=0&start=${x}&refresh_start=0`);\r\n//         const html = await axios.get(`https://cors-anywhere.herokuapp.com/https://search.naver.com/search.naver?&where=news&query=${search_word}`);\r\n//         const $ = await cheerio.load(html.data)\r\n//         $('.news_wrap.api_ani_send').each((i,e) => {\r\n//             data.push({\r\n//                     // index : i+x,\r\n//                     index : i,\r\n//                     img : $(e).find('img.thumb').attr('src'),\r\n//                     title : $(e).find('a.news_tit').attr('title'),\r\n//                     link : $(e).find('a.news_tit').attr('href')\r\n//                     //      title: $(elem).find('h2.entry-title').text(),\r\n//             })\r\n\r\n//         })\r\n        \r\n//     // }\r\n//     return data\r\n// }\r\n\r\nexport async function get_data_list(search_word) {\r\n    const data = []\r\n    for (let x = 1; x < 20; x+=10){\r\n        //https://cors-anywhere.herokuapp.com/ 추가로 cors 에러 삭제\r\n        const html = await axios.get(`https://cors-anywhere.herokuapp.com/https://search.naver.com/search.naver?&where=news&query=${search_word}`);\r\n        const $ = await cheerio.load(html.data)\r\n        $('.news_wrap.api_ani_send').each((i,e) => {\r\n            data.push({\r\n                    index : i+x,\r\n                    img : $(e).find('img.thumb').attr('src'),\r\n                    title : $(e).find('a.news_tit').attr('title'),\r\n                    link : $(e).find('a.news_tit').attr('href'),\r\n                    text: $(e).find('a.api_txt_lines.dsc_txt_wrap').text()\r\n                    //      title: $(elem).find('h2.entry-title').text(),\r\n            })\r\n\r\n        })\r\n    }\r\n    return data\r\n}\r\n\r\nexport async function get_image_list(search_word) {\r\n    const IdKey = 'upDSQXUZEo0WIKF0P34h'\r\n    const SecretKey ='CcHRc5JmM0'\r\n    //https://cors-anywhere.herokuapp.com/ 추가로 cors 에러 삭제\r\n    //네이버 API사용\r\n    const {data:{items}} = \r\n            await axios.get(`https://cors-anywhere.herokuapp.com/https://openapi.naver.com/v1/search/image.json`,{\r\n                                params:{\r\n                                query:search_word,\r\n                                display:40\r\n                                },\r\n                                headers:{\r\n                                'X-Naver-Client-Id':IdKey,\r\n                                'X-Naver-Client-Secret' : SecretKey\r\n                                }\r\n                            });\r\n    return items\r\n}","import { get_image_list} from '../api/searchresult';\r\nimport { createPromiseThunkBySearch, handleAsyncActions, reducerUtils } from '../lib/asyncUtils';\r\nimport {\r\n    GET_IMAGE_LISTS,\r\n    GET_IMAGE_LISTS_ERROR,\r\n    GET_IMAGE_LISTS_SUCCESS,\r\n    CLEAR_IMAGE_LIST} from './types'\r\n\r\n\r\nexport const getImageLists = createPromiseThunkBySearch(GET_IMAGE_LISTS, get_image_list);\r\nexport const clearImageList = () => ({ type: CLEAR_IMAGE_LIST });\r\nconst initialState={\r\n    imagelists: reducerUtils.initial()\r\n}\r\nexport default function imagelists(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_IMAGE_LISTS:\r\n        case GET_IMAGE_LISTS_ERROR:\r\n        case GET_IMAGE_LISTS_SUCCESS:\r\n            return handleAsyncActions(GET_IMAGE_LISTS, 'imagelists', true)(state,action);\r\n        case CLEAR_IMAGE_LIST:\r\n                return {\r\n                    ...state,\r\n                    imagelists:reducerUtils.initial()\r\n                };\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport * as searchresultAPI from '../api/searchresult';\r\nimport {  createPromiseThunkBySearch,\r\n     handleAsyncActions,  reducerUtils } from '../lib/asyncUtils';\r\nimport {\r\n    GET_SEARCH_LISTS,\r\n    GET_SEARCH_LISTS_SUCCESS,\r\n    GET_SEARCH_LISTS_ERROR,\r\n    CLEAR_SEARCH_LIST,\r\n    CLEAR_IMAGE_LIST2\r\n    } \r\n    from './types';\r\n\r\nexport const getSearchList = createPromiseThunkBySearch(GET_SEARCH_LISTS, searchresultAPI.get_data_list);\r\nexport const clearSearchList = () => ({ type: CLEAR_SEARCH_LIST });\r\nexport const clearImageListFromAxios = () => ({ type: CLEAR_IMAGE_LIST2 });\r\nconst initialState={\r\n    searchlists : reducerUtils.initial(),\r\n}\r\nexport default function lists(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_SEARCH_LISTS:\r\n        case GET_SEARCH_LISTS_ERROR:\r\n        case GET_SEARCH_LISTS_SUCCESS:\r\n            return handleAsyncActions(GET_SEARCH_LISTS,'searchlists',true)(state,action);\r\n\r\n        case CLEAR_SEARCH_LIST:\r\n            return {\r\n                ...state,\r\n                searchlists:reducerUtils.initial()\r\n            };\r\n        case CLEAR_IMAGE_LIST2:\r\n            return {\r\n                ...state,\r\n                searchlists:reducerUtils.initial()\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {FaSearchengin} from 'react-icons/fa'\r\nimport {VscQuote} from 'react-icons/vsc';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {settingSearchWord} from '../module/searchword';\r\nimport { clearImageList } from '../module/imagelists';\r\nimport { clearSearchList } from '../module/searchlists';\r\nimport { settingNowPage } from '../module/setnowpage';\r\nfunction SearchFieldForSearch() {\r\n  const searchword = useSelector(state => state.searchword.searchword);\r\n  const [inputWord, setInputWord] = useState('');\r\n  const history = useHistory()  \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (inputWord)\r\n      {\r\n        dispatch(settingSearchWord(inputWord))\r\n        setInputWord('');\r\n      }\r\n  }, [dispatch,inputWord,searchword])\r\n    \r\n    const onPress = (e) => {\r\n      if (e.key ==='Enter'){\r\n        setInputWord(e.target.value);\r\n      }\r\n    }\r\n    \r\n    const handleClick = () =>{\r\n      dispatch(clearImageList())\r\n      dispatch(clearSearchList)\r\n      dispatch(settingSearchWord(''))\r\n      dispatch(settingNowPage(''))\r\n      history.push('/');\r\n    }\r\n  \r\n     return (\r\n      <nav className=\"SearchFieldForSearch\">\r\n        <div className=\"SearchFieldForSearch__div1\">\r\n          <VscQuote width=\"0\" height=\"0\" className=\"SearchFieldForSearch__div1__icon\" />\r\n          <div className=\"SearchFieldForSearch__div1__yg\" onClick={handleClick} >Y G</div>\r\n        </div>\r\n        <div className=\"SearchFieldForSearch__div2\">\r\n          <input type=\"text\" className=\"SearchFieldForSearch__div2__input\" defaultValue={searchword ? searchword : null} placeholder=\"Search...\" onKeyDown={onPress}/>\r\n          <FaSearchengin type=\"button\" className=\"SearchFieldForSearch__div2__icon\" />\r\n        </div>\r\n        <div className=\"SearchFieldForSearch__div3\">\r\n\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default SearchFieldForSearch\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { clearImageList } from '../module/imagelists';\r\nimport { clearImageListFromAxios, clearSearchList } from '../module/searchlists';\r\nimport { settingNowPage } from '../module/setnowpage';\r\n\r\nfunction MiddleBarForSearch() {\r\n    const nowPage = useSelector(state => state.setnowpage.nowpage)\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const onClickNews = () =>{\r\n        dispatch(clearImageList())\r\n        dispatch(clearImageListFromAxios())\r\n        dispatch(settingNowPage('news'))\r\n        history.push('/searchnews')\r\n    }\r\n    const onClickImageFromNaver = () =>{\r\n        dispatch(clearSearchList())\r\n        dispatch(clearImageListFromAxios())\r\n        dispatch(settingNowPage('imfn'))\r\n        history.push('/imagefromnaverapi')\r\n    }\r\n    const onClickImageFromAxios = () =>{\r\n        dispatch(clearSearchList())\r\n        dispatch(clearImageList())\r\n        dispatch(settingNowPage('imfa'))\r\n        history.push('/imagefromaxios')\r\n    }\r\n    useEffect(() => {\r\n    }, [nowPage])\r\n    const setStyle={color:'#4374D9', fontWeight:'bolder',borderBottom:'4px solid #4374D9'};\r\n    return (\r\n        <div className=\"middleBarForSearch\">\r\n            <ul className=\"middleBarForSearch__ul\">\r\n                <li className=\"middleBarForSearch__ul__li\">\r\n                    <div className=\"middleBarForSearch__ul__li__div\" style={nowPage==='news' ?  setStyle: null} onClick={onClickNews}>News</div>\r\n                </li>\r\n                <li className=\"middleBarForSearch__ul__li\">\r\n                    <div className=\"middleBarForSearch__ul__li__div\" style={nowPage==='imfn' ? setStyle: null} onClick={onClickImageFromNaver}>Image F NaverAPI</div>\r\n                </li>\r\n                <li className=\"middleBarForSearch__ul__li\">\r\n                    <div className=\"middleBarForSearch__ul__li__div\" style={nowPage==='imfa' ? setStyle : null} onClick={onClickImageFromAxios}>Image F Axios</div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiddleBarForSearch\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getSearchList } from '../module/searchlists';\r\n\r\nfunction SearchResult() {\r\n    const {data, loading, error} = useSelector(state=>state.searchlists.searchlists)\r\n    const dispatch = useDispatch()\r\n    const searchword = useSelector(state => state.searchword.searchword)\r\n    useEffect(()=>{\r\n        if(searchword){\r\n            dispatch(getSearchList(searchword))\r\n        }\r\n    },[dispatch,searchword])\r\n    \r\n\r\n\r\n    if (loading&&!data) return <div className=\"loading\">로딩 중...</div>\r\n    if (error) return <div className=\"loading\">에러 발생</div>\r\n    if (!data ) return <div className=\"loading\">검색어를 입력하세요</div>;\r\n    return (\r\n        <div className=\"SearchResult\">\r\n            <ul className=\"SearchResult__ul\">\r\n                {\r\n                    data.map(item=> (\r\n                        <li className=\"SearchResult__ul__li\" key={item.index}>\r\n                            <a href={item.link} className=\"SearchResult__ul__li__a\">\r\n                                <div className=\"SearchResult__ul__li__a__div\">{item.title}</div>\r\n                                <img src={item.img} alt=\"\" className=\"SearchResult__ul__li__a__img\"/>\r\n                                <div className=\"SearchResult__ul__li__a__div2\">{item.text}</div>\r\n                            </a>\r\n                        </li>    \r\n                    ))\r\n                }\r\n     \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport SearchFieldForSearch from '../components/SearchFieldForSearch'\r\nimport MiddleBarForSearch from '../components/MiddleBarForSearch'\r\nimport SearchResult from '../components/SearchResult'\r\nimport Footer from '../components/Footer'\r\nfunction SearchPage() {\r\n    return (\r\n        <main className='SearchPage'>\r\n            <Helmet>\r\n                <title>Search Page</title>\r\n                <meta\r\n                    name='description'\r\n                    content='검색 결과 페이지'\r\n                />\r\n            </Helmet>\r\n            <section className='SearchPage__nav'>\r\n                <SearchFieldForSearch />\r\n            </section>\r\n            <section>\r\n                <MiddleBarForSearch />\r\n            </section>\r\n            <section className='SearchPage__lists'>\r\n                <SearchResult />\r\n            </section>\r\n            <section>\r\n                <Footer />\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getImageLists } from '../module/imagelists';\r\nimport Modal from 'react-awesome-modal';\r\n\r\n\r\nfunction ImageLists() {\r\n    const {data, loading, error} = useSelector(state=>state.imagelists.imagelists);\r\n    const searchword = useSelector(state => state.searchword.searchword);\r\n    const [selectedSrc,setSelectedSrc] = useState('');\r\n    const [selectedTitle,setSelectedTitle] = useState('');\r\n    const [visible,setVisible]  = useState(false);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (searchword){\r\n        dispatch(getImageLists(searchword))\r\n        }\r\n    }, [dispatch,searchword])\r\n    const openModal = (select) => {\r\n        setSelectedSrc(select.link)\r\n        setSelectedTitle(select.title)\r\n       setVisible(true);\r\n    }\r\n    const closeModal = () =>{\r\n\r\n        setVisible(false);\r\n    }\r\n    if (loading&&!data) return <div className=\"loading\">로딩 중...</div>\r\n    if (error) return <div className=\"loading\">에러 발생</div>\r\n    if (!data ) return <div className=\"loading\">검색어를 입력하세요</div>;\r\n    return (\r\n\r\n        <div className=\"ImageLists\">\r\n                {data.map((item,index) => (\r\n                    index ? (\r\n                    <div className=\"ImageLists__div\" key={index} onClick={() => {openModal(item)}}>\r\n                        <img className=\"ImageLists__div__img\" src={item.link} alt={item.title}/>\r\n                        <div className=\"ImageLists__div__div\" src={item.link}></div>\r\n                    </div>\r\n                    ) :null\r\n                ))}\r\n                <Modal className=\"ImageLists__modal\" \r\n                    width=\"400\"\r\n                    height=\"350\" \r\n                    visible={visible} \r\n                    effect=\"fadeInUp\" \r\n                    onClickAway={() => closeModal()}>\r\n                    <div className=\"ImageLists__modal__div\">\r\n                        <img className=\"ImageLists__modal__div__img\" src={selectedSrc} alt={selectedTitle} />\r\n                        <div className=\"ImageLists__modal__div__div\">{selectedTitle}</div>\r\n                        \r\n                    </div>\r\n                </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ImageLists\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport SearchFieldForSearch from '../components/SearchFieldForSearch'\r\nimport ImageLists from '../components/ImageLists'\r\nimport MiddleBarForSearch from '../components/MiddleBarForSearch'\r\nimport Footer from '../components/Footer'\r\nfunction ImageSearchPage() {\r\n    return (\r\n        <main className='home'>\r\n            <Helmet>\r\n                <title>Image Search Page</title>\r\n                <meta\r\n                    name='description'\r\n                    content='이미지 페이지'\r\n                />\r\n            </Helmet>\r\n            <section className='SearchPage__nav'>\r\n                <SearchFieldForSearch />\r\n            </section>\r\n            <section>\r\n                <MiddleBarForSearch />\r\n            </section>\r\n            <section className='SearchPage__lists'>\r\n                <ImageLists />\r\n            </section>\r\n            <section>\r\n                <Footer />\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ImageSearchPage\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-awesome-modal';\r\nimport { getSearchList } from '../module/searchlists';\r\n\r\nfunction ImageLists() {\r\n    \r\n    const {data, loading, error} = useSelector(state=>state.searchlists.searchlists)\r\n    const searchword = useSelector(state => state.searchword.searchword);\r\n    const [selectedSrc,setSelectedSrc] = useState('');\r\n    const [selectedTitle,setSelectedTitle] = useState('');\r\n    const [visible,setVisible]  = useState(false);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (searchword){\r\n    \r\n        dispatch(getSearchList(searchword))\r\n        }\r\n    }, [dispatch,searchword])\r\n    const openModal = (select) => {\r\n        setSelectedSrc(select.img)\r\n        setSelectedTitle(select.title)\r\n       setVisible(true);\r\n    }\r\n    const closeModal = () =>{\r\n\r\n        setVisible(false);\r\n    }\r\n    if (loading&&!data) return <div className=\"loading\">로딩 중...</div>\r\n    if (error) return <div className=\"loading\">에러 발생</div>\r\n    if (!data ) return <div className=\"loading\">검색어를 입력하세요</div>;\r\n    return (\r\n\r\n        <div className=\"ImageListsFromAxios\">\r\n                {data.map(item => (\r\n                    \r\n                    <div className=\"ImageListsFromAxios__div\" key={item.index} onClick={() => {openModal(item)}}>\r\n                        <img className=\"ImageListsFromAxios__div__img\" src={item.img} alt={item.title}/>\r\n                        <div className=\"ImageListsFromAxios__div__div\"></div>\r\n                    </div>\r\n\r\n                ))}\r\n                <Modal className=\"ImageListsFromAxios__modal\" \r\n                width=\"450\" height=\"350\"\r\n                visible={visible} effect=\"fadeInUp\" onClickAway={() => closeModal()}>\r\n                    <div className=\"ImageListsFromAxios__modal__div\">\r\n                        <img className=\"ImageListsFromAxios__modal__div__img\" src={selectedSrc} alt={selectedTitle} />\r\n                        <div className=\"ImageListsFromAxios__modal__div__div\">{selectedTitle}</div>\r\n                        \r\n                    </div>\r\n                </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ImageLists\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport SearchFieldForSearch from '../components/SearchFieldForSearch'\r\nimport ImageListsFromAxios from '../components/ImageListsFromAxios'\r\nimport MiddleBarForSearch from '../components/MiddleBarForSearch'\r\nimport Footer from '../components/Footer'\r\nfunction ImageSearchPageFromAxios() {\r\n    return (\r\n        <main className='home'>\r\n            <Helmet>\r\n                <title>Image Search Page</title>\r\n                <meta\r\n                    name='description'\r\n                    content='이미지 페이지'\r\n                />\r\n            </Helmet>\r\n            <section className='SearchPage__nav'>\r\n                <SearchFieldForSearch />\r\n            </section>\r\n            <section>\r\n                <MiddleBarForSearch />\r\n            </section>\r\n            <section className='SearchPage__lists'>\r\n                <ImageListsFromAxios />\r\n            </section>\r\n            <section>\r\n                <Footer />\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ImageSearchPageFromAxios\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport HomePage from './containers/HomePage';\nimport NotFound from './containers/NotFound';\nimport SearchPage from './containers/SearchPage';\nimport ImageSearchPage from './containers/ImageSearchPage';\nimport ImageSearchPageFromAxios from './containers/ImageSearchPageFromAxios';\nimport './sass/main.scss'\n\nfunction App() {\n  \n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/imagefromnaverapi\" component={ImageSearchPage} />\n        <Route exact path=\"/searchnews\" component={SearchPage} />\n        <Route exact path=\"/imagefromaxios\" component={ImageSearchPageFromAxios} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>    \n  )\n}\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport searchlists from './searchlists';\r\nimport searchword from './searchword';\r\nimport imagelists from './imagelists';\r\nimport setnowpage from './setnowpage'\r\n\r\nconst rootReducer =  combineReducers({searchlists,searchword,imagelists,setnowpage});\r\n\r\nexport default rootReducer","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './App';\nimport rootReducer from './module';\nimport reportWebVitals from './reportWebVitals';\nimport reduxThunk from 'redux-thunk'\nimport { Provider } from 'react-redux';\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(reduxThunk))\n  )\nReactDOM.render(\n  \n  <Provider store = {store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}